From 9902e011326186163e2e55562d5e2d49294e36b2 Mon Sep 17 00:00:00 2001
From: Ian <ooo6312970@gmail.com>
Date: Sun, 13 Oct 2024 02:54:23 +0000
Subject: [PATCH 2/3] After adding new system call

---
 arch/x86/entry/syscalls/syscall_64.tbl |  2 +-
 include/linux/syscalls.h               |  2 +-
 kernel/Makefile                        |  1 +
 kernel/revstr/Makefile                 |  1 +
 kernel/revstr/sys_revstr.c             | 33 ++++++++++++++++++++++++++
 5 files changed, 37 insertions(+), 2 deletions(-)
 create mode 100644 kernel/revstr/Makefile
 create mode 100644 kernel/revstr/sys_revstr.c

diff --git a/arch/x86/entry/syscalls/syscall_64.tbl b/arch/x86/entry/syscalls/syscall_64.tbl
index c84d12608cd2..d50f6020c1fc 100644
--- a/arch/x86/entry/syscalls/syscall_64.tbl
+++ b/arch/x86/entry/syscalls/syscall_64.tbl
@@ -372,7 +372,7 @@
 448	common	process_mrelease	sys_process_mrelease
 449	common	futex_waitv		sys_futex_waitv
 450	common	set_mempolicy_home_node	sys_set_mempolicy_home_node
-
+451	common	revstr			sys_revstr
 #
 # Due to a historical design error, certain syscalls are numbered differently
 # in x32 as compared to native x86_64.  These syscalls have numbers 512-547.
diff --git a/include/linux/syscalls.h b/include/linux/syscalls.h
index a34b0f9a9972..6e4baa345902 100644
--- a/include/linux/syscalls.h
+++ b/include/linux/syscalls.h
@@ -684,7 +684,7 @@ asmlinkage long sys_clock_nanosleep_time32(clockid_t which_clock, int flags,
 
 /* kernel/printk.c */
 asmlinkage long sys_syslog(int type, char __user *buf, int len);
-
+asmlinkage long sys_revstr(char __user *input,int len);
 /* kernel/ptrace.c */
 asmlinkage long sys_ptrace(long request, long pid, unsigned long addr,
 			   unsigned long data);
diff --git a/kernel/Makefile b/kernel/Makefile
index d754e0be1176..49fe7bb7250a 100644
--- a/kernel/Makefile
+++ b/kernel/Makefile
@@ -53,6 +53,7 @@ obj-y += rcu/
 obj-y += livepatch/
 obj-y += dma/
 obj-y += entry/
+obj-y += revstr/
 obj-$(CONFIG_MODULES) += module/
 
 obj-$(CONFIG_KCMP) += kcmp.o
diff --git a/kernel/revstr/Makefile b/kernel/revstr/Makefile
new file mode 100644
index 000000000000..d29c32bc685d
--- /dev/null
+++ b/kernel/revstr/Makefile
@@ -0,0 +1 @@
+obj-y += sys_revstr.o
diff --git a/kernel/revstr/sys_revstr.c b/kernel/revstr/sys_revstr.c
new file mode 100644
index 000000000000..d4714f206bb4
--- /dev/null
+++ b/kernel/revstr/sys_revstr.c
@@ -0,0 +1,33 @@
+#include<linux/kernel.h>
+#include<linux/syscalls.h>
+#include<linux/uaccess.h>
+
+asmlinkage long __x64_sys_revstr(char __user *input, int len)
+{
+	char *k_buffer;
+	int i;
+	k_buffer=kmalloc(len,GFP_KERNEL); // allocate kernel memory for [len] bytes
+	copy_from_user(k_buffer,input,len); // copy_from_user(to,from,len)
+	
+	//printk : print in kernel ring buffer
+	//KERN_INFO:specify a normal message
+	printk(KERN_INFO "The origin string: %s\n",k_buffer);
+
+	//reverse the string in KERNEL space
+	for (i=0;i<len;i++)
+	{
+		char temp=k_buffer[i];
+		k_buffer[i]=k_buffer[len-i-1];
+		k_buffer[len-i-1]=temp;
+	}
+	
+	printk(KERN_INFO "The reversed string: %s\n",k_buffer);
+
+	copy_to_user(input,k_buffer,len); // copy_to_user(to,from,len)
+	kfree(k_buffer); // free the kernel memory
+	return 0;
+}
+	
+
+	
+	
-- 
2.43.0

