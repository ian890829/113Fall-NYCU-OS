From 36c3b84eec35061667414a87a7d8646ed7573e6c Mon Sep 17 00:00:00 2001
From: Ian <ooo6312970@gmail.com>
Date: Wed, 16 Oct 2024 08:11:55 +0000
Subject: [PATCH 3/3] Debugged

---
 include/linux/syscalls.h   |  2 +-
 kernel/revstr/sys_revstr.c | 56 ++++++++++++++++++++------------------
 2 files changed, 31 insertions(+), 27 deletions(-)

diff --git a/include/linux/syscalls.h b/include/linux/syscalls.h
index 6e4baa345902..5b26bc670807 100644
--- a/include/linux/syscalls.h
+++ b/include/linux/syscalls.h
@@ -684,7 +684,7 @@ asmlinkage long sys_clock_nanosleep_time32(clockid_t which_clock, int flags,
 
 /* kernel/printk.c */
 asmlinkage long sys_syslog(int type, char __user *buf, int len);
-asmlinkage long sys_revstr(char __user *input,int len);
+asmlinkage long sys_revstr(char __user *input,size_t len);
 /* kernel/ptrace.c */
 asmlinkage long sys_ptrace(long request, long pid, unsigned long addr,
 			   unsigned long data);
diff --git a/kernel/revstr/sys_revstr.c b/kernel/revstr/sys_revstr.c
index d4714f206bb4..015a527ce590 100644
--- a/kernel/revstr/sys_revstr.c
+++ b/kernel/revstr/sys_revstr.c
@@ -1,33 +1,37 @@
-#include<linux/kernel.h>
-#include<linux/syscalls.h>
-#include<linux/uaccess.h>
 
-asmlinkage long __x64_sys_revstr(char __user *input, int len)
+#include <linux/kernel.h>
+#include <linux/syscalls.h>
+#include <linux/uaccess.h>
+
+SYSCALL_DEFINE2(revstr, char __user *, input, size_t, len)
 {
-	char *k_buffer;
-	int i;
-	k_buffer=kmalloc(len,GFP_KERNEL); // allocate kernel memory for [len] bytes
-	copy_from_user(k_buffer,input,len); // copy_from_user(to,from,len)
-	
-	//printk : print in kernel ring buffer
-	//KERN_INFO:specify a normal message
-	printk(KERN_INFO "The origin string: %s\n",k_buffer);
-
-	//reverse the string in KERNEL space
-	for (i=0;i<len;i++)
-	{
-		char temp=k_buffer[i];
-		k_buffer[i]=k_buffer[len-i-1];
-		k_buffer[len-i-1]=temp;
-	}
-	
-	printk(KERN_INFO "The reversed string: %s\n",k_buffer);
+    char *k_buffer;
+    int i;
+
+
+    // Allocate kernel memory
+    k_buffer = kmalloc(len + 1, GFP_KERNEL);
+
 
-	copy_to_user(input,k_buffer,len); // copy_to_user(to,from,len)
-	kfree(k_buffer); // free the kernel memory
-	return 0;
+    copy_from_user(k_buffer, input, len);
+    k_buffer[len] = '\0';
+
+    printk(KERN_INFO "The original string: %s\n", k_buffer);
+
+    // Reverse the string in kernel space
+    for (i = 0; i < len / 2; i++) {
+        char temp = k_buffer[i];
+        k_buffer[i] = k_buffer[len - i - 1];
+        k_buffer[len - i - 1] = temp;
+    }
+
+    printk(KERN_INFO "The reversed string: %s\n", k_buffer);
+
+    copy_to_user(input, k_buffer, len);
+
+    kfree(k_buffer);
+    return 0;
 }
-	
 
 	
 	
-- 
2.43.0

